"""
1. Напишите программу, которая считает общую цену. Вводится M рублей
и N копеек цена, а также количество L товара Посчитайте общую цену
в рублях и копейках за L товаров.
Пример:
Input: Цена одной вещи 3 рубля 20 копеек, посчитать 3 предмета.
Output: Общая цена 9 рублей 60 копеек

"""
m = int(input('Введите количество рублей: '))
n = int(input('Введите количество копеек: '))
l_1 = int(input('Введите количество товара: '))

price_n = n * l_1

if price_n >= 100:
    price_n %= 100
    m_1 = price_n // 100
price_m = m * l_1 + m_1
print('Общая цена', price_m, 'рублей', price_n, 'копеек')

"""
3. Выведите n-ое число Фибоначчи, используя временные переменные,
циклические операторы и условные операторы. n - вводится
"""
number_1 = number_2 = 1
n = int(input('Введите чсло: '))
i = 0
print(number_1, end=' ')

while i < n - 1:
    print(number_2, end=' ')
    number_1, number_2 = number_2, number_1 + number_2
    i += 1

"""
4. Определите, является ли число палиндромом (читается слева
направо и справа налево одинаково).  Число положительное целое,
произвольной длины. Задача требует работать только с числами
(без конвертации числа в строку)
"""
num = int(input('Введите число: '))
n = num
revers = 0

while True:
    revers += n % 10
    n //= 10
    if not n:
        break
    revers *= 10

if num == revers:
    print('Palindrome')
else:
    print('No Palindrome')

"""
2.1 Итак, это самая простая миссия. Напишите функцию, которая
будет получать 2 числа и возвращать результат произведения этих чисел.
"""


def mult_two(a, b):
    return a * b


a = int(input('Введите число:'))
b = int(input('Введите число:'))
answer = mult_two(a, b)
print(answer)

"""
2.2 В этой миссии вы должны написать функцию, которая представит
человека по переданным параметрам.
"""


def say_hi(name: str, age: int) -> str:
    return "Hi. My name is " + name + " and I'm " + str(age) + " years old"


age = int(input("Введите возраст: "))
name = input("Введите имя: ")
answer = say_hi(name=name, age=age)
print(answer)

"""
2.3 Ваше задание здесь создать функцию, которая получает массив(tuple)
и возвращает набор с 3 элементами - первым, третьим, вторым с конца.
"""


def easy_unpack(elements: tuple) -> tuple:
    x, y, z = elements[0], elements[2], elements[-2]
    return x, y, z


"""
2.4 Дан массив с положительными числами и число N. Вы должны найти
N-ую степень элемента в массиве с индексом N. Если N за границами
массива, тогда вернуть -1. Не забывайте, что первый элемент имеет
индекс 0.
"""


def index_power(array: list, n: int) -> int:
    if len(array) <= n:
        a = -1
    else:
        a = array[n]
        a **= n
    return a


"""
2.5 Дано положительное целое число. Вам необходимо подсчитать
произведение всех цифр в этом числе, за исключением нулей.
"""


def checkio(number: int) -> int:
    sum = 1
    for i in str(number):
        if i != "0":
            sum *= int(i)
    return sum


"""
2.6 Дан кусок текста. Соберите все заглавные буквы в одно слово
в том порядке как они встречаются в куске текста.
"""


def find_message(text: str) -> str:
    strin = ""
    for i in text:
        if i.isupper():
            strin += i
    return strin
