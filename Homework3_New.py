import copy

"""
1. FizzBuzz. Напишите программу, которая печатает цифры от 1 до 100,
но вместо чисел, кратных 3 пишет Fizz, вместо чисел кратный 5 пишет
Buzz, а вместо чисел одновременно кратных и 3 и 5 - FizzBuzz
"""
for i in range(1, 101):
    if i % 3 == 0 and i % 5 == 0:
        print("FizzBuzz")
    elif i % 3 == 0:
        print("Fizz")
    elif i % 5 == 0:
        print("Buzz")
    else:
        print(i)

"""
2. List practice
Используйте генератор списков чтобы получить следующий: ['ab', 'ac', 'ad', 'bb', 'bc', 'bd'].
Используйте на предыдущий список slice чтобы получить следующий: ['ab', 'ad', 'bc'].
Используйте генератор списков чтобы получить следующий ['1a', '2a', '3a', '4a'].
Одной строкой удалите элемент '2a' из прошлого списка и напечатайте его.
Скопируйте список и добавьте в него элемент '2a' так чтобы в исходном списке этого элемента не было.
"""
lst_1 = [i + j for i in 'ab' for j in 'bcd']
print("Список #1: ", lst_1, "\n")

lst_2 = lst_1[::2]
print("Список #2: ", lst_2, "\n")

lst_3 = [str(i) + j for i in range(1, 5) for j in 'a']
print("Список #3: ", lst_3, "\n")

lst_4 = lst_3.pop(1)
print("Список #4: ", lst_4, "\n")

lst_5 = copy.copy(lst_3)
lst_5.insert(1, '2a')
print(lst_3, '\n', lst_5)

"""
3. Tuple practice
Создайте список ['a', 'b', 'c'] и сделайте из него кортеж.
Создайте кортеж ('a', 'b', 'c'), И сделайте из него список
Сделайте следующие присвоения одной строкой a = 'a', b=2, c=’python’.
Создайте кортеж из одного элемента, чтобы при итерировании по этому
элементы последовательно выводились значения 1, 2, 3. Убедитесь что
len() исходного кортежа возвращает 1.
"""
lst = tuple([el for el in 'abc'])
print(lst, type(lst))
tpl = list(lst)
print(tpl, type(tpl), '\n')

template = "Сделайте следующие присвоения одной строкой a = {a}," \
           "b = {b}, c = {c}".format(a="a", b="2", c="'python'")
print(template, '\n')

tuple_1 = ([1, 2, 3],)
print("Это кортеж из", len(tuple_1), "элемента")

"""
4. Пары элементов
Дан список чисел. Посчитайте, сколько в нем пар элементов,
равных друг другу. Считается, что любые два элемента, равные
друг другу образуют одну пару, которую необходимо посчитать.
Входные данные - строка из чисел, разделенная пробелами.
Выходные данные - количество пар.
Важно: 1 1 1 - это 3 пары, 1 1 1 1 - это 6 пар
"""
lst = [int(s) for s in input().split()]
pair_of_numbers = 0
n = len(lst)
for i in range(n):
    for j in range(i + 1, n):
        if lst[i] == lst[j]:
            pair_of_numbers += 1
print(pair_of_numbers)

"""
5.Уникальные‌ ‌элементы‌ ‌в‌ ‌списке‌ ‌
Дан‌ ‌список.‌ ‌Выведите‌ ‌те‌ ‌его‌ ‌элементы,‌ ‌которые‌ ‌встречаются
‌в‌ ‌списке‌ ‌только‌ ‌один‌ ‌раз.‌ ‌Элементы‌ ‌нужно‌ ‌выводить‌ ‌в‌ ‌том
‌порядке,‌ ‌в‌ ‌котором‌ ‌они‌ ‌встречаются‌ ‌в‌ ‌списке.‌
"""
lst = input('Введите список: ').split()
elements = [i for i in set(lst) if lst.count(i) < 2]
for j in elements:
    print(j)

"""
6.  Упорядоченный‌ ‌список.‌ ‌
Дан‌ ‌список‌ ‌целых‌ ‌чисел.‌ ‌Требуется‌ ‌переместить‌ ‌все‌ ‌ненулевые‌ ‌элементы‌ ‌в
‌левую‌ ‌часть‌ списка,‌ ‌не‌ ‌меняя‌ ‌их‌ ‌порядок,‌ ‌а‌ ‌все‌ ‌нули‌ ‌-‌ ‌в‌ ‌правую‌ ‌часть.‌
‌Порядок‌ ‌ненулевых‌ ‌элементов‌ ‌ изменять‌ ‌нельзя,‌ ‌дополнительный‌ ‌список‌
‌использовать‌ ‌нельзя,‌ ‌задачу‌ ‌нужно‌ ‌выполнить‌ ‌за‌ ‌один‌ ‌проход‌ ‌по‌ ‌списку.‌
‌Распечатайте‌ ‌полученный‌ ‌список.‌ 
"""
lst = [el for el in input('Введите числа: ').split()]
n = len(lst) - 1
for i in range(n, 0, -1):
    if lst[i] == '0':
        lst.append(lst.pop(i))
print(lst)

"""
7.  Шоколадка‌ ‌имеет‌ ‌вид‌ ‌прямоугольника,‌ ‌разделенного‌ ‌на‌ ‌n×m‌ ‌долек.‌
‌Шоколадку‌ ‌можно‌ ‌один‌ ‌раз‌ ‌разломить‌ ‌по‌ ‌прямой‌ ‌на‌ ‌две‌ ‌части. Определите,
‌можно‌ ‌ли‌ ‌таким ‌образом‌ ‌отломить‌ ‌от‌ ‌шоколадки‌ ‌ровно‌ ‌k‌ ‌долек.‌ ‌
Определите,‌ ‌можно‌ ‌ли‌ ‌отломить‌ ‌от‌ ‌шоколадки‌ ‌ровно‌ ‌k‌ ‌одиночных‌ ‌долек‌ ‌
Определите,‌ ‌можно‌ ‌ли‌ ‌отломить‌ ‌от‌ ‌шоколадки‌ ‌ровно‌ ‌k‌ ‌одиночных‌ ‌долек‌ ‌
с‌ ‌помощью‌ ‌t‌ ‌разломов.‌ ‌Описание‌ ‌решение‌ ‌поместите‌ ‌в‌ ‌docstring‌ 
"""
# to be continued ...
